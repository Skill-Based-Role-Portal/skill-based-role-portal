version: "3.8"

volumes:
  pgdata:
  kongadata:

networks:
  kong-net:
    driver: bridge
  internal:

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    platform: linux/amd64
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    platform: linux/amd64
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    platform: linux/amd64
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata

  #################################
  # Frontend
  #################################
  frontend:
    image: sbrp/frontend:1.0
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      - mysql-database
    networks:
      - internal
    restart: always
    ports:
      - "5173:5173"

  #################################
  # Database: MySQL
  #################################
  mysql-database:
    image: mysql:5.7
    platform: linux/amd64
    restart: always
    networks:
      - internal
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: root
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - 3306:3306

  #################################
  # Database GUI: phpmyadmin
  #################################
  phpmyadmin:
    image: phpmyadmin:5.2.0
    depends_on:
      - mysql-database
    restart: always
    networks:
      - internal
    ports:
      - 5013:80
    environment:
      - PMA_ARBITRARY=1

  #################################
  # Staff: The Staff microservice
  #################################
  staff:
    image: sbrp/staff:1.0
    build:
      context: .
      dockerfile: backend/staff/Dockerfile
    depends_on:
      - mysql-database
    restart: always
    networks:
      - internal
    ports:
      - "5001:5001"
    environment:
      PYTHONUNBUFFERED: 1
      dbURL: mysql+mysqlconnector://root:root@host.docker.internal:3306/staff

  #################################
  # Role Application: The Role Application microservice
  #################################
  application:
    image: sbrp/application:1.0
    build:
      context: .
      dockerfile: backend/application/Dockerfile
    depends_on:
      - mysql-database
    restart: always
    networks:
      - internal
    ports:
      - "5002:5002"
    environment:
      PYTHONUNBUFFERED: 1
      dbURL: mysql+mysqlconnector://root:root@host.docker.internal:3306/application
      staffURL: http://staff:5001/staff/
      roleURL: http://role:5003/role/

  #################################
  # Role: The Role microservice
  #################################
  role:
    image: sbrp/role:1.0
    build:
      context: .
      dockerfile: backend/role/Dockerfile
    depends_on:
      - mysql-database
    restart: always
    networks:
      - internal
    ports:
      - "5003:5003"
    environment:
      PYTHONUNBUFFERED: 1
      dbURL: mysql+mysqlconnector://root:root@host.docker.internal:3306/role
