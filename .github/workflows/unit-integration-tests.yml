# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run Unit Tests and Integration Tests
on: [push]

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
          MYSQL_LOCAL_INFILE: "1"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up MySQL and run init.test.sql
      run: |
        sleep 10
        mysql -h 127.0.0.1 -P 3306 -u root -proot < init.test.sql
    - name: Check Databases
      run: |
        sleep 10
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "SHOW DATABASES;"
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f backend/common/requirements.txt ]; then pip install -r backend/common/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run application unit tests
      run: |
        python backend/application/unit_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/application
    - name: Run application integration tests
      run: |
        python backend/application/integration_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/application
    - name: Run role unit tests
      run: |
        python backend/role/unit_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/role
    - name: Run role integration tests
      run: |
        python backend/role/integration_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/role
    - name: Run skill unit tests
      run: |
        python backend/skill/unit_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/skill
    - name: Run skill integration tests
      run: |
        python backend/skill/integration_tests.py
      env:
          PYTHONPATH: ${{ github.workspace }}/backend/common
          dbURL: mysql+mysqlconnector://root:root@127.0.0.1:3306/skill

